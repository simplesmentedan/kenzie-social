openapi: 3.0.3
info:
  title: Kenzie Social
  version: 1.0.0
  description: Um projeto feito para ser uma rede social.
paths:
  /api/{id}/comentarios/:
    get:
      operationId: api_comentarios_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comentario'
          description: ''
    post:
      operationId: api_comentarios_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comentario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comentario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: ''
  /api/amizades/:
    get:
      operationId: api_amizades_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
    post:
      operationId: api_amizades_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amizades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Amizades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Amizades'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
    patch:
      operationId: api_amizades_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
  /api/amizades/{id}:
    get:
      operationId: api_amizades_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
    post:
      operationId: api_amizades_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amizades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Amizades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Amizades'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
    patch:
      operationId: api_amizades_partial_update_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAmizades'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amizades'
          description: ''
  /api/comentarios/{id}/:
    get:
      operationId: api_comentarios_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: ''
    put:
      operationId: api_comentarios_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comentario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comentario'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: ''
    patch:
      operationId: api_comentarios_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComentario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComentario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComentario'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comentario'
          description: ''
    delete:
      operationId: api_comentarios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/curtidas/:
    get:
      operationId: api_curtidas_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curtida'
          description: ''
    post:
      operationId: api_curtidas_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curtida'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curtida'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curtida'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curtida'
          description: ''
  /api/curtidas/{id}/:
    get:
      operationId: api_curtidas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curtida'
          description: ''
    delete:
      operationId: api_curtidas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/postagens/:
    post:
      operationId: api_postagens_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publicacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publicacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publicacao'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publicacao'
          description: ''
  /api/postagens/{id}/:
    get:
      operationId: api_postagens_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publicacao'
          description: ''
    put:
      operationId: api_postagens_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publicacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Publicacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Publicacao'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publicacao'
          description: ''
    patch:
      operationId: api_postagens_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublicacao'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPublicacao'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPublicacao'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publicacao'
          description: ''
    delete:
      operationId: api_postagens_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/postagens/{id}/curtidas/:
    get:
      operationId: api_postagens_curtidas_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curtida'
          description: ''
    post:
      operationId: api_postagens_curtidas_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curtida'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curtida'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curtida'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curtida'
          description: ''
  /api/seguidores/:
    get:
      operationId: api_seguidores_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seguidores'
          description: ''
    post:
      operationId: api_seguidores_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seguidores'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seguidores'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seguidores'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seguidores'
          description: ''
  /api/seguidores/{id}/:
    get:
      operationId: api_seguidores_list_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seguidores'
          description: ''
    post:
      operationId: api_seguidores_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seguidores'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seguidores'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seguidores'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seguidores'
          description: ''
  /api/usuarios/:
    post:
      operationId: api_usuarios_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/usuarios/{id}/:
    get:
      operationId: api_usuarios_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_usuarios_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_usuarios_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_usuarios_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/usuarios/login/:
    post:
      operationId: api_usuarios_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
components:
  schemas:
    Amizades:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        id_pendent:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
      required:
      - first_name
      - id
      - id_pendent
      - last_name
      - username
    Comentario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner_id:
          type: integer
          readOnly: true
        post_id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date
          readOnly: true
        content:
          type: string
      required:
      - content
      - created_date
      - id
      - owner_id
      - post_id
    Curtida:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        post:
          type: integer
        liked_at:
          type: string
          format: date
          readOnly: true
          nullable: true
      required:
      - id
      - liked_at
      - owner
      - post
    PatchedAmizades:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        id_pendent:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
    PatchedComentario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner_id:
          type: integer
          readOnly: true
        post_id:
          type: integer
          readOnly: true
        created_date:
          type: string
          format: date
          readOnly: true
        content:
          type: string
    PatchedPublicacao:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
        created_date:
          type: string
          format: date
          readOnly: true
        post_type:
          $ref: '#/components/schemas/PostTypeEnum'
        owner_id:
          type: integer
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
    PostTypeEnum:
      enum:
      - public
      - private
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
    Publicacao:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
        created_date:
          type: string
          format: date
          readOnly: true
        post_type:
          $ref: '#/components/schemas/PostTypeEnum'
        owner_id:
          type: integer
          readOnly: true
      required:
      - content
      - created_date
      - id
      - owner_id
      - title
    Seguidores:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        id_follower:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
      required:
      - first_name
      - id
      - id_follower
      - last_name
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
      required:
      - email
      - first_name
      - id
      - last_name
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
